# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
version: '3.8'
services:
  api:
    build:
      context: .
    environment:
      NODE_ENV: production
    env_file:
      - .env
    ports:
      - 3000:3000
    networks:
      - main_network

  postgres:
    image: postgres:15.1
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - '${POSTGRES_PORT}:5432'
    networks:
      - main_network

  # dynamodb-local:
  #   command: '-jar DynamoDBLocal.jar -sharedDb -dbPath ./data'
  #   image: 'amazon/dynamodb-local:latest'
  #   container_name: dynamodb-local
  #   ports:
  #     - '8000:8000'
  #   volumes:
  #     - './docker/dynamodb:/home/dynamodblocal/data'
  #   working_dir: /home/dynamodblocal

networks:
  main_network:
    driver: bridge
